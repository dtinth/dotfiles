#!/bin/bash
set -eo pipefail

main() {
  ensure  check_fish      install_fish
  ensure  check_fisher    install_fisher
  ensure  check_starship  install_starship
  ensure  check_fzf       install_fzf
  ensure  check_fish_git  install_fish_git
  ensure  check_gh        install_gh
  ensure  check_bat       install_bat
  setup_git_config
}

check_fish() {
  command_exists fish
}
install_fish() {
  if command_exists brew; then
    brew install fish
  elif command_exists apt-get; then
    install_apt_package fish
  fi
}

check_fisher() {
  test -f ~/.config/fish/functions/fisher.fish
}
install_fisher() {
  fish -c 'curl -sL https://git.io/fisher | source && fisher install jorgebucaran/fisher'
}

check_starship() {
  command_exists starship
}
install_starship() {
  if command_exists brew; then
    brew install starship
  else
    sudo sh -c "$(curl -fsSL https://starship.rs/install.sh)" -- -y
  fi
}

check_fzf() {
  command_exists fzf
}
install_fzf() {
  if command_exists brew; then
    brew install fzf
  elif command_exists apt-get; then
    install_apt_package fzf
  fi
}

check_fish_git() {
  test -f ~/.config/fish/conf.d/git.fish
}
install_fish_git() {
  fish -c 'fisher install jhillyerd/plugin-git'
}

check_gh() {
  command_exists gh
}
install_gh() {
  if command_exists brew; then
    brew install gh
  elif command_exists apt-get; then
    curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
    sudo apt-get update
    install_apt_package gh
  fi
}

check_bat() {
  command_exists bat
}
install_bat() {
  if command_exists brew; then
    brew install bat
  elif command_exists apt-get; then
    wget -O/tmp/bat.deb https://github.com/sharkdp/bat/releases/download/v0.18.3/bat_0.18.3_amd64.deb
    install_apt_package /tmp/bat.deb
  fi
  if ! command_exists bat && test -f /usr/bin/batcat; then
    sudo ln -s /usr/bin/batcat /usr/local/bin/bat
  fi
}

setup_git_config() {
  # Only allow fast-forwards when pulling.
  git config --global pull.ff only
}

ensure() {
  if ! "$1"; then
    echo >&2 "=> $1 failed, running $2..."
    "$2"
  fi
  if ! "$1"; then
    echo >&2 "!! $1 still failed, aborted"
    exit 1
  fi
  echo >&2 "=> $1 passed"
}

command_exists() {
  command -v "$1" >/dev/null 2>&1
}

apt_updated=
install_apt_package() {
  if [ -z "$apt_updated" ]; then
    sudo apt-get update
    apt_updated=1
  fi
  sudo apt-get install -y "$@"
}

main
